def ALL = 'all'
def INFO = 'info'
def MIGRATE = 'migrate'
def VALIDATE = 'validate'

pipeline {
    agent any

    // Disallow concurrent executions of the Pipeline.
    options { disableConcurrentBuilds() }

    parameters {
        // Choice of flyway target command
        choice(
                name: 'FLYWAY_COMMAND',
                choices: ["$ALL", "$INFO", "$VALIDATE", "$MIGRATE"],
                description: 'target flyway command'
        )
    }

    stages {
        stage('Init') {
            steps {
                script {
                    sh 'whoami'
                    sh 'printenv'

                    PROJECT_PROFILE = 'prod'

                    // DB Connection Credential
                    DB_CONNECTION_CREDENTIAL = 'b873f9bf-03cc-4daf-be4f-7e00194aa2a0'
                    withCredentials([
                            usernamePassword(
                                    credentialsId: "${DB_CONNECTION_CREDENTIAL}",
                                    usernameVariable: 'username',
                                    passwordVariable: 'password'
                            )
                    ]) {
                        DATABASE_USERNAME = "${username}"
                        DATABASE_PASSWORD = "${password}"
                    }

                    // flyway migration
                    MIGRATION_WORKSPACE = "${WORKSPACE}/db"

                    executeFlywayRunner = { command ->
                        flywayrunner installationName: 'flywaytool-jenkins',
                                flywayCommand: "$command",
                                commandLineArgs: "-configFiles=${MIGRATION_WORKSPACE}/flyway-${PROJECT_PROFILE}.conf",
                                credentialsId: "${DB_CONNECTION_CREDENTIAL}",
                                url: "jdbc:mysql://${DATABASE_HOST}:3306/dongne",
                                locations: "filesystem:${MIGRATION_WORKSPACE}/migration"
                    }
                }
            }
        }

        stage('DB Version Info') {
            when {
                anyOf {
                    expression { params.FLYWAY_COMMAND == ALL }
                    expression { params.FLYWAY_COMMAND == INFO }
                }
            }
            steps {
                executeFlywayRunner(INFO)
            }
        }

        stage('DB Migrate') {
            when {
                anyOf {
                    expression { params.FLYWAY_COMMAND == ALL }
                    expression { params.FLYWAY_COMMAND == MIGRATE }
                }
            }
            executeFlywayRunner(MIGRATE)
        }

        stage('DB Validate') {
            when {
                anyOf {
                    expression { params.FLYWAY_COMMAND == ALL }
                    expression { params.FLYWAY_COMMAND == VALIDATE }
                }
            }
            executeFlywayRunner(VALIDATE)
        }
    }
}